---
- hosts: sclab
  remote_user: stevenokm
  become: yes
  become_user: root
  become_method: sudo
  tasks:
    - name: add deadsnakes ppa
      block:
        - name: import deadsnakes ppa
          apt_repository:
            repo: ppa:deadsnakes/ppa
    - name: python3.5
      block:
        - name: ubuntu 18.04
          block:
            - name: install python3.5
              apt:
                pkg:
                  - python3.5
                  - python3.5-dbg
                  - python3.5-dev
                  - python3.5-venv
                state: present
                update_cache: yes
            - name: ensurepip on python3.5
              shell: python3.5 -m ensurepip --altinstall --upgrade
            - name: fix system default pip
              shell: apt install -y --reinstall python3-pip
          when: ansible_distribution == 'Ubuntu' and ansible_distribution_version == "18.04"
        - name: ubuntu 20.04
          block:
            - name: install python3.5
              apt:
                pkg:
                  - python3.5
                  - python3.5-dbg
                  - python3.5-dev
                  - python3.5-venv
                state: present
                update_cache: yes
            - name: ensurepip on python3.5
              shell: python3.5 -m ensurepip --altinstall --upgrade
            - name: fix system default pip
              shell: apt install -y --reinstall python3-pip
          when: ansible_distribution == 'Ubuntu' and ansible_distribution_version == "20.04"
        - name: install libpython3.5
          apt:
            pkg:
              - libpython3.5
              - libpython3.5-dev
            state: present
            update_cache: yes
        - name: install latest pip3.5
          shell: python3.5 -m pip install pip --upgrade --force
        - name: install jupyter in python3.5
          pip:
            name: jupyter
            executable: pip3.5
        - name: set python 3.5 jupyter notebook ip setting script
          copy:
            dest: "/etc/profile.d/jupyter35.sh"
            content: |
              alias jupyter-notebook3.5='echo -e "\nNOTE: change \033[1;33m{{ ansible_default_ipv4.address }}\033[0m to \033[1;33m{{ ansible_host }}\033[0m\n";python3.5 -m notebook --ip {{ ansible_default_ipv4.address }} --no-browser'
      when: (ansible_distribution == 'Ubuntu' and ansible_distribution_version == "18.04") or (ansible_distribution == 'Ubuntu' and ansible_distribution_version == "20.04")
    - name: python3.6
      block:
        - name: ubuntu 18.04
          block:
            - name: install python3
              apt:
                pkg:
                  - python3
                  - python3-dbg
                  - python3-dev
                  - python3-venv
                state: present
                update_cache: yes
            - name: install python3-pip
              apt:
                pkg: python3-pip
                state: present
                update_cache: yes
          when: ansible_distribution == 'Ubuntu' and ansible_distribution_version == "18.04"
        - name: ubuntu 20.04
          block:
            - name: install python3.6
              apt:
                pkg:
                  - python3.6
                  - python3.6-dbg
                  - python3.6-dev
                  - python3.6-venv
                state: present
                update_cache: yes
            - name: ensurepip on python3.6
              shell: python3.6 -m ensurepip --altinstall --upgrade
            - name: fix system default pip
              shell: apt install -y --reinstall python3-pip
          when: ansible_distribution == 'Ubuntu' and ansible_distribution_version == "20.04"
        - name: install libpython3.6
          apt:
            pkg:
              - libpython3.6
              - libpython3.6-dev
            state: present
            update_cache: yes
        - name: install latest pip3.6
          shell: python3.6 -m pip install pip --upgrade --force
        - name: install pytorch 1.7.1
          pip:
            name:
              - https://download.pytorch.org/whl/cu102/torch-1.7.1-cp36-cp36m-linux_x86_64.whl
              - https://download.pytorch.org/whl/cu102/torchvision-0.8.2-cp36-cp36m-linux_x86_64.whl
              - torchaudio==0.7.2
            executable: pip3.6
            state: "present"
        - name: install tensorflow 2.3.2
          pip:
            name:
              - tensorflow==2.3.2
              - tensorflow-text==2.3.0
            executable: pip3.6
            state: "present"
        - name: install jupyter in python3.6
          pip:
            name: jupyter
            executable: pip3.6
            state: "present"
        - name: set python 3.6 jupyter notebook ip setting script
          copy:
            dest: "/etc/profile.d/jupyter36.sh"
            content: |
              alias jupyter-notebook3.6='echo -e "\nNOTE: change \033[1;33m{{ ansible_default_ipv4.address }}\033[0m to \033[1;33m{{ ansible_host }}\033[0m\n";python3.6 -m notebook --ip {{ ansible_default_ipv4.address }} --no-browser'
      when: (ansible_distribution == 'Ubuntu' and ansible_distribution_version == "18.04") or (ansible_distribution == 'Ubuntu' and ansible_distribution_version == "20.04")
    - name: python3.8
      block:
        - name: ubuntu 18.04
          block:
            - name: install python3.8
              apt:
                pkg:
                  - python3.8
                  - python3.8-dbg
                  - python3.8-dev
                  - python3.8-venv
                state: present
                update_cache: yes
            - name: ensurepip on python3.8
              shell: python3.8 -m ensurepip --altinstall --upgrade
            - name: fix system default pip
              shell: apt install -y --reinstall python3-pip
          when: ansible_distribution == 'Ubuntu' and ansible_distribution_version == "18.04"
        - name: ubuntu 20.04
          block:
            - name: install python3
              apt:
                pkg:
                  - python3
                  - python3-dbg
                  - python3-dev
                  - python3-venv
                state: present
                update_cache: yes
            - name: install python3-pip
              apt:
                pkg: python3-pip
                state: present
                update_cache: yes
          when: ansible_distribution == 'Ubuntu' and ansible_distribution_version == "20.04"
        - name: ubuntu 22.04
          block:
            - name: install python3.8
              apt:
                pkg:
                  - python3.8
                  - python3.8-dbg
                  - python3.8-dev
                  - python3.8-venv
                state: present
                update_cache: yes
            - name: ensurepip on python3.8
              shell: python3.8 -m ensurepip --altinstall --upgrade
            - name: fix system default pip
              shell: apt install -y --reinstall python3-pip
          when: ansible_distribution == 'Ubuntu' and ansible_distribution_version == "22.04"
        - name: install libpython3.8
          apt:
            pkg:
              - libpython3.8
              - libpython3.8-dev
            state: present
            update_cache: yes
        - name: install latest pip3.8
          shell: python3.8 -m pip install pip --upgrade --force
        - name: install pytorch 1.12.1
          pip:
            name:
              - torch==1.12.1+cu113
              - torchvision==0.13.1+cu113
              - torchaudio==0.12.1
            executable: pip3.8
            extra_args: --extra-index-url https://download.pytorch.org/whl/cu113
            state: "present"
        - name: install tensorflow 2.11.0
          pip:
            name:
              - tensorflow==2.11.0
              - tensorflow-text==2.11.0
            executable: pip3.8
            state: "present"
        - name: install jupyter in python3.8
          pip:
            name:
              - jupyter
              - ipython==7.17.0
            executable: pip3.8
            state: "absent"
          when: ansible_distribution == 'Ubuntu' and ansible_distribution_version == "18.04"
        - name: install jupyter in python3.8
          pip:
            name:
              - jupyter
              - ipython
            executable: pip3.8
            state: "present"
          when: ansible_distribution == 'Ubuntu' and ansible_distribution_version == "20.04"
        - name: install jupyter in python3.8
          pip:
            name:
              - jupyter
              - ipython
            executable: pip3.8
            state: "present"
          when: ansible_distribution == 'Ubuntu' and ansible_distribution_version == "22.04"
        - name: set python 3.8 jupyter notebook ip setting script
          copy:
            dest: "/etc/profile.d/jupyter38.sh"
            content: |
              alias jupyter-notebook3.8='echo -e "\nNOTE: change \033[1;33m{{ ansible_default_ipv4.address }}\033[0m to \033[1;33m{{ ansible_host }}\033[0m\n";python3.8 -m notebook --ip {{ ansible_default_ipv4.address }} --no-browser'
    - name: python3.10
      block:
        - name: ubuntu 18.04
          block:
            - name: install python3.10
              apt:
                pkg:
                  - python3.10
                  - python3.10-dbg
                  - python3.10-dev
                  - python3.10-venv
                state: present
                update_cache: yes
            - name: ensurepip on python3.10
              shell: python3.10 -m ensurepip --altinstall --upgrade
            - name: fix system default pip
              shell: apt install -y --reinstall python3-pip
          when: ansible_distribution == 'Ubuntu' and ansible_distribution_version == "18.04"
        - name: ubuntu 20.04
          block:
            - name: install python3.10
              apt:
                pkg:
                  - python3.10
                  - python3.10-dbg
                  - python3.10-dev
                  - python3.10-venv
                state: present
                update_cache: yes
            - name: ensurepip on python3.10
              shell: python3.10 -m ensurepip --altinstall --upgrade
            - name: fix system default pip
              shell: apt install -y --reinstall python3-pip
          when: ansible_distribution == 'Ubuntu' and ansible_distribution_version == "20.04"
        - name: ubuntu 22.04
          block:
            - name: install python3
              apt:
                pkg:
                  - python3
                  - python3-dbg
                  - python3-dev
                  - python3-venv
                state: present
                update_cache: yes
            - name: install python3-pip
              apt:
                pkg: python3-pip
                state: present
                update_cache: yes
          when: ansible_distribution == 'Ubuntu' and ansible_distribution_version == "22.04"
        - name: install libpython3.10
          apt:
            pkg:
              - libpython3.10
              - libpython3.10-dev
            state: present
            update_cache: yes
        - name: install latest pip3.10
          shell: python3.10 -m pip install pip --upgrade --force
        - name: install pytorch 1.12.1
          pip:
            name:
              - torch==1.12.1+cu113
              - torchvision==0.13.1+cu113
              - torchaudio==0.12.1
            executable: pip3.10
            extra_args: --extra-index-url https://download.pytorch.org/whl/cu113
            state: "present"
        - name: install tensorflow 2.11.0
          pip:
            name:
              - tensorflow==2.11.0
              - tensorflow-text==2.11.0
            executable: pip3.10
            state: "absent"
          when: ansible_distribution == 'Ubuntu' and ansible_distribution_version == "18.04"
        - name: install tensorflow 2.11.0
          pip:
            name:
              - tensorflow==2.11.0
              - tensorflow-text==2.11.0
            executable: pip3.10
            state: "present"
          when: ansible_distribution == 'Ubuntu' and ansible_distribution_version == "20.04"
        - name: install tensorflow 2.11.0
          pip:
            name:
              - tensorflow==2.11.0
              - tensorflow-text==2.11.0
            executable: pip3.10
            state: "present"
          when: ansible_distribution == 'Ubuntu' and ansible_distribution_version == "22.04"
        - name: install jupyter in python3.10
          pip:
            name:
              - jupyter
              - ipython==7.17.0
            executable: pip3.10
            state: "absent"
          when: ansible_distribution == 'Ubuntu' and ansible_distribution_version == "18.04"
        - name: install jupyter in python3.10
          pip:
            name:
              - jupyter
              - ipython
            executable: pip3.10
            state: "present"
          when: ansible_distribution == 'Ubuntu' and ansible_distribution_version == "20.04"
        - name: install jupyter in python3.10
          pip:
            name:
              - jupyter
              - ipython
            executable: pip3.10
            state: "present"
          when: ansible_distribution == 'Ubuntu' and ansible_distribution_version == "22.04"
        - name: set python 3.10 jupyter notebook ip setting script
          copy:
            dest: "/etc/profile.d/jupyter310.sh"
            content: |
              alias jupyter-notebook3.10='echo -e "\nNOTE: change \033[1;33m{{ ansible_default_ipv4.address }}\033[0m to \033[1;33m{{ ansible_host }}\033[0m\n";python3.10 -m notebook --ip {{ ansible_default_ipv4.address }} --no-browser'
    - name: setup default pip3
      block:
        - name: ubuntu 18.04
          block:
            - name: force install pip3.6
              shell: python3.6 -m pip install pip --upgrade --force
          when: ansible_distribution == 'Ubuntu' and ansible_distribution_version == "18.04"
        - name: ubuntu 20.04
          block:
            - name: force install pip3.8
              shell: python3.8 -m pip install pip --upgrade --force
          when: ansible_distribution == 'Ubuntu' and ansible_distribution_version == "20.04"
        - name: ubuntu 22.04
          block:
            - name: force install pip3.10
              shell: python3.10 -m pip install pip --upgrade --force
          when: ansible_distribution == 'Ubuntu' and ansible_distribution_version == "22.04"
    - name: glances & jupyter part install on default python3
      block:
        - name: install latest glances on python3
          pip:
            name: glances
            state: latest
            executable: pip3
        - name: install latest nvidia-ml-py3 on python3
          pip:
            name: nvidia-ml-py3
            state: latest
            executable: pip3
        - name: install latest py3nvml on python3
          pip:
            name: py3nvml
            state: latest
            executable: pip3
        - name: install llvm
          block:
            - name: install llvm-10
              apt:
                pkg:
                  - llvm-10
                  - libllvm10
                state: present
                update_cache: yes
              when: ansible_distribution == 'Ubuntu' and ansible_distribution_version == "18.04"
            - name: install llvm-12
              apt:
                pkg:
                  - llvm-12
                  - libllvm12
                state: present
                update_cache: yes
              when: (ansible_distribution == 'Ubuntu' and ansible_distribution_version == "20.04") or (ansible_distribution == 'Ubuntu' and ansible_distribution_version == "22.04")
        - name: install latest llvmlite on python3
          block:
            - name: config for llvm-10
              pip:
                name: llvmlite
                state: latest
                executable: pip3
              environment:
                LLVM_CONFIG: llvm-config-10
              when: ansible_distribution == 'Ubuntu' and ansible_distribution_version == "18.04"
            - name: config for llvm-12
              pip:
                name: llvmlite
                state: latest
                executable: pip3
              environment:
                LLVM_CONFIG: llvm-config-12
              when: (ansible_distribution == 'Ubuntu' and ansible_distribution_version == "20.04") or (ansible_distribution == 'Ubuntu' and ansible_distribution_version == "22.04")
        - name: install latest netifaces on python3
          pip:
            name: netifaces
            state: latest
            executable: pip3
        - name: install latest py-cpuinfo on python3
          pip:
            name: py-cpuinfo
            state: latest
            executable: pip3
        - name: install latest pySMART.smartx on python3
          pip:
            name: pySMART.smartx
            state: latest
            executable: pip3
        - name: install docker dependency for glances in python3
          pip:
            name: glances[docker]
            state: latest
            executable: pip3
        - name: install hddtemp
          apt:
            pkg: hddtemp
            state: present
            update_cache: yes
        - name: setup config file for glances
          copy:
            src: "glances.conf"
            dest: "/etc/glances/"
        - name: install latest kaggle on python3
          pip:
            name: kaggle
            executable: pip3
        - name: install 2.0.2 matplotlib on python3
          pip:
            name: matplotlib==2.0.2
            executable: pip3
        - name: set jupyter notebook ip setting script
          copy:
            dest: "/etc/profile.d/00-jupyter-alias.sh"
            content: |
              alias jupyter-notebook='echo -e "\nNOTE: change \033[1;33m{{ ansible_default_ipv4.address }}\033[0m to \033[1;33m{{ ansible_host }}\033[0m\n";jupyter-notebook --ip {{ ansible_default_ipv4.address }} --no-browser'
    - name: python2
      block:
        - name: install python
          apt:
            pkg:
              - python
              - python-dev
            state: present
            update_cache: yes
        - name: install libpython
          apt:
            pkg:
              - libpython2.7
              - libpython2.7-dev
            state: present
            update_cache: yes
        - name: install python-pip
          apt:
            pkg: python-pip
            state: present
            update_cache: yes
        - name: upgrade latest pip2
          shell: python -m pip install pip --upgrade --force
      when: ansible_distribution == 'Ubuntu' and ansible_distribution_version == "16.04"
